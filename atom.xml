<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://huongvnq.github.io/atom.xml" rel="self"/>
  
  <link href="https://huongvnq.github.io/"/>
  <updated>2021-07-20T07:36:51.466Z</updated>
  <id>https://huongvnq.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Routing Trong Magento2</title>
    <link href="https://huongvnq.github.io/2021/07/20/routing-in-magento2/"/>
    <id>https://huongvnq.github.io/2021/07/20/routing-in-magento2/</id>
    <published>2021-07-20T05:05:37.000Z</published>
    <updated>2021-07-20T07:36:51.466Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/07/20/routing-in-magento2/routing.jpg" alt="routing"></p><h2 id="1-Loi-mo-dau"><a href="#1-Loi-mo-dau" class="headerlink" title="1.Lời mở đầu"></a>1.Lời mở đầu</h2><ul><li>Routing là một trong những phần rất quan trọng trong luồng hoạt động của Magento2.</li><li>Routing sẽ chịu trách nhiệm xử lý URL request, từ URL sẽ chỉ ra module nào chịu trách nhiệm xử lý request và thực thi controller action.</li><li>Trong bài viết này, chúng ta sẽ cùng đi tìm hiểu cách mà router sẽ “match” với controller action như thế nào. Sau đó sẽ tìm hiểu cách tạo một custom router. Hãy cùng đi vào nội dung của bài viết thôi nào :smile:</li></ul><h2 id="2-Magento2-Request-Flow"><a href="#2-Magento2-Request-Flow" class="headerlink" title="2.Magento2 Request Flow"></a>2.Magento2 Request Flow</h2><ul><li>Trong Magento2, một request URL sẽ như thế này<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com/index.php/front_name/controller/action</span><br></pre></td></tr></table></figure></li><li>Trong url trên, <strong>front_name</strong> sẽ được dùng để chỉ định module. <strong>Router</strong> sẽ định nghĩa cái tên này cho mỗi module trong file <strong>routes.xml</strong></li><li>Khi bạn tạo một request trong Magento2, Magento2 sẽ xử lý theo luồng như sau</li></ul><p><img src="/2021/07/20/routing-in-magento2/magento2-request-processing.png" alt="Magento2 Request Processing"></p><ul><li><strong>FrontController</strong> sẽ được gọi đến trong class Http để điều hướng request.<br>Chúng ta hãy cùng xem File <code>vendor/magento/framework/App/FrontController.php</code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">dispatch</span>(<span class="params">RequestInterface <span class="variable">$request</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   \Magento\Framework\Profiler::start(<span class="string">&#x27;routers_match&#x27;</span>);</span><br><span class="line">   <span class="variable">$routingCycleCounter</span> = <span class="number">0</span>;</span><br><span class="line">   <span class="variable">$result</span> = <span class="literal">null</span>;</span><br><span class="line">   <span class="keyword">while</span> (!<span class="variable">$request</span>-&gt;isDispatched() &amp;&amp; <span class="variable">$routingCycleCounter</span>++ &lt; <span class="number">100</span>) &#123;</span><br><span class="line">       <span class="comment">/** <span class="doctag">@var</span> \Magento\Framework\App\RouterInterface $router */</span></span><br><span class="line">       <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_routerList <span class="keyword">as</span> <span class="variable">$router</span>) &#123;</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="variable">$actionInstance</span> = <span class="variable">$router</span>-&gt;match(<span class="variable">$request</span>);</span><br><span class="line">               <span class="keyword">if</span> (<span class="variable">$actionInstance</span>) &#123;</span><br><span class="line">                   <span class="variable">$request</span>-&gt;setDispatched(<span class="literal">true</span>);</span><br><span class="line">                   <span class="keyword">$this</span>-&gt;response-&gt;setNoCacheHeaders();</span><br><span class="line">                   <span class="keyword">if</span> (<span class="variable">$actionInstance</span> <span class="keyword">instanceof</span> \Magento\Framework\App\Action\AbstractAction) &#123;</span><br><span class="line">                       <span class="variable">$result</span> = <span class="variable">$actionInstance</span>-&gt;dispatch(<span class="variable">$request</span>);</span><br><span class="line">                   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                       <span class="variable">$result</span> = <span class="variable">$actionInstance</span>-&gt;execute();</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">catch</span> (\Magento\Framework\<span class="built_in">Exception</span>\NotFoundException <span class="variable">$e</span>) &#123;</span><br><span class="line">               <span class="variable">$request</span>-&gt;initForward();</span><br><span class="line">               <span class="variable">$request</span>-&gt;setActionName(<span class="string">&#x27;noroute&#x27;</span>);</span><br><span class="line">               <span class="variable">$request</span>-&gt;setDispatched(<span class="literal">false</span>);</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">   \Magento\Framework\Profiler::stop(<span class="string">&#x27;routers_match&#x27;</span>);</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$routingCycleCounter</span> &gt; <span class="number">100</span>) &#123;</span><br><span class="line">       <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">LogicException</span>(<span class="string">&#x27;Front controller reached 100 router match iterations&#x27;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>Chúng ta có thể thấy ở hàm <code>dispatch</code>, router list sẽ được cho vào vòng lặp để tìm kiếm router nào sẽ match với request. Khi tìm ra controller action nào “match” với request, action đó sẽ được gọi và thực thi.</li></ul><h2 id="3-Tao-mot-custom-route-trong-area-Frontend"><a href="#3-Tao-mot-custom-route-trong-area-Frontend" class="headerlink" title="3.Tạo một custom route trong area Frontend"></a>3.Tạo một custom route trong area Frontend</h2><ul><li><p>Trước khi đi vào tạo một route, chúng ta hãy tạo một module, tham khảo bài viết <a href="https://huongvnq.github.io/2021/07/18/create-a-new-module-in-magento2/">Create a Module in Magento2</a></p></li><li><p>Ở đây mình tạo Module là Learning_Routing</p></li><li><p>Để đăng kí một frontend route, chúng ta phải tạo file routes.xml<br>File <code>app/code/Learning/Routing/etc/frontend/routes.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;urn:magento:framework:App/etc/routes.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Use router &#x27;standard&#x27; for frontend route--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router</span> <span class="attr">id</span>=<span class="string">&quot;standard&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Define a custom route with id and frontName--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">route</span> <span class="attr">frontName</span>=<span class="string">&quot;helloworld&quot;</span> <span class="attr">id</span>=<span class="string">&quot;helloworld&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--The module which this route match to--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">&quot;Learning_Routing&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">route</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">router</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Thật đơn giản để đăng kí một route. Ở đây ta phải sử dụng <strong>standard router</strong> cho area Frontend. Route này sẽ có một route con định nghĩa module cho nó và 2 attribute:</p><ul><li>Attribute <strong>id</strong> là một chuỗi unique định danh một route. Chúng ta cũng sẽ sử dụng chuỗi này để khai báo layout cho action của module.</li><li>Attribute <strong>frontName</strong> cũng là một chuỗi unique, chuỗi này được chỉ định trong url.</li></ul><p>Ví dụ nếu bạn khai báo một route như sau</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;route frontName=&quot;helloworld&quot; id=&quot;helloworld&quot;&gt;</span><br></pre></td></tr></table></figure><p>Thì Url sẽ là</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com/index.php/helloworld/controller/action</span><br></pre></td></tr></table></figure><p>Layout cho action này sẽ là</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">helloworld_controller_action.xml</span><br></pre></td></tr></table></figure><p>Và chúng ta phải tạo controller action ở trong thư mục</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;namespace&#125;/&#123;module&#125;/Controller/&#123;Controller&#125;/&#123;Action&#125;.php</span><br></pre></td></tr></table></figure></li></ul><h2 id="4-Tao-mot-custom-route-trong-area-Admin-Admin-Route"><a href="#4-Tao-mot-custom-route-trong-area-Admin-Admin-Route" class="headerlink" title="4. Tạo một custom route trong area Admin (Admin Route)"></a>4. Tạo một custom route trong area Admin (Admin Route)</h2><ul><li><p>Route này tương tự như route cho Frontend chỉ khác là chúng ta sẽ khai báo nó trong thư mục adminhtml và với router id là <strong>admin</strong></p><p>File <code>app/code/Learning/Routing/etc/adminhtml/routes.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;urn:magento:framework:App/etc/routes.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--Use router &#x27;admin&#x27; for admin route --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router</span> <span class="attr">id</span>=<span class="string">&quot;admin&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Define a custom route with id and frontName --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">route</span> <span class="attr">id</span>=<span class="string">&quot;learning_routing&quot;</span> <span class="attr">frontName</span>=<span class="string">&quot;learning_routing&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--The module which this route match to--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">&quot;Learning_Routing&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">route</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">router</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Một URL của một admin page sẽ có cấu trúc tương tự như đối với frontend page, tuy nhiên <strong>admin_area</strong> sẽ được thêm vào ở đằng trước <strong>frontName</strong> để chỉ định đây là một route của area Admin.<br>Ví dụ url của một admin csm page</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://example.com/index.php/admin/learning_routing/controller/action</span><br></pre></td></tr></table></figure></li><li><p>Controller Action cho admin page cũng sẽ được thêm vào bên trong thư mục Controller/Adminhtml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;namespace&#125;/&#123;module&#125;/Controller/Adminhtml/&#123;Controller&#125;/&#123;Action&#125;.php</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-Cach-su-dung-route-de-ghi-de-controller-cua-core"><a href="#5-Cach-su-dung-route-de-ghi-de-controller-cua-core" class="headerlink" title="5. Cách sử dụng route để ghì đè controller của core"></a>5. Cách sử dụng route để ghì đè controller của core</h2><ul><li>Như chúng ta đã thấy ở những phần bên trên, mỗi route sẽ có một <strong>id</strong> để định danh. Vậy điều gì sẽ xảy ra nếu chúng ta định nghĩa 2 route với cùng một id?</li><li>Câu trả lời là action controller sẽ tìm thấy ở cả 2 modules. Và chúng ta phải sử dụng attribute <strong>before/after</strong> để config thứ tự module, chỉ định module nào sẽ được tìm thấy trước.</li><li>Ví dụ, nếu mà chúng ta muốn ghi đè controller <code>customer/account/login</code> chúng ta sẽ định route trong <strong>route.xml</strong> như thế này:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;urn:magento:framework:App/etc/routes.xsd&quot;</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!--Use router &#x27;standard&#x27; for frontend route--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">router</span> <span class="attr">id</span>=<span class="string">&quot;standard&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Define a custom route with id and frontName--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">route</span> <span class="attr">frontName</span>=<span class="string">&quot;helloworld&quot;</span> <span class="attr">id</span>=<span class="string">&quot;helloworld&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--The module which this route match to--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">&quot;Learning_Routing&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">route</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">route</span> <span class="attr">id</span>=<span class="string">&quot;customer&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">&quot;Learning_Routing&quot;</span> <span class="attr">before</span>=<span class="string">&quot;Magento_Customer&quot;</span> /&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">route</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">router</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure>Sau đó định nghĩa một file controller :<br><code>app/code/Learning/Routing/Controller/Account/Login.php</code></li><li>Khi đó, <strong>FrontController</strong> sẽ tìm thấy action Login ở trong Module Learning_Routing trước, action này sẽ được chạy và action Login của Magento_Customer sẽ không được chạy nữa. Như vậy là chúng ta đã thực hiện ghi đè Controller thành công.</li></ul><h2 id="6-Tong-ket"><a href="#6-Tong-ket" class="headerlink" title="6. Tổng kết"></a>6. Tổng kết</h2><ul><li>Route là một phần cơ bản mà chúng ta phải biết khi tìm hiểu về luồng hoạt động của Magento. Qua bài viết này mong các bạn sẽ nắm được cách hoạt động của một route và đặc biệt là các quy tắc đặt tên để Magento có thể nhận biết và xử lý. Cảm ơn các bạn đã đọc đến cuối bài viết và hẹn gặp lại các bạn trong các bài viết tiếp theo của serries Tìm hiểu về Magento. :kissing_heart:</li><li>Bản gốc của bài viết :</li><li>Nguồn tham khảo: <a href="https://www.mageplaza.com/magento-2-module-development/magento-2-routing.html">https://www.mageplaza.com/magento-2-module-development/magento-2-routing.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/07/20/routing-in-magento2/routing.jpg&quot; alt=&quot;routing&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-Loi-mo-dau&quot;&gt;&lt;a href=&quot;#1-Loi-mo-dau&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="Magento" scheme="https://huongvnq.github.io/categories/Magento/"/>
    
    
    <category term="magento basis" scheme="https://huongvnq.github.io/tags/magento-basis/"/>
    
  </entry>
  
  <entry>
    <title>Create A New Module In Magento2</title>
    <link href="https://huongvnq.github.io/2021/07/18/create-a-new-module-in-magento2/"/>
    <id>https://huongvnq.github.io/2021/07/18/create-a-new-module-in-magento2/</id>
    <published>2021-07-18T03:55:23.000Z</published>
    <updated>2021-07-20T02:52:16.292Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/07/18/create-a-new-module-in-magento2/module.webp" alt="magento"></p><h2 id="1-Tong-quat"><a href="#1-Tong-quat" class="headerlink" title="1.Tổng quát"></a>1.Tổng quát</h2><ul><li><p><strong>Module</strong> là một đơn vị cấu trúc của Magento. Toàn bộ hệ thống sẽ được xây dựng dựa trên các <strong>Module</strong>. Thông thường, bước đầu tiên để custom core của mangeto cũng là tạo module.</p></li><li><p>Để tạo một module, chúng ta phải thực hiện các bước sau:</p><ul><li>Tạo một thư mục <strong>module</strong></li><li>Tạo file etc/module.xml</li><li>Tạo file registration.php</li><li>Chạy <code>script bin/magento setup:upgrade</code> để install module mới</li><li>Kiểm tra module được active hay chưa.</li></ul></li></ul><pre><code>chúng ta hãy cùng đi vào cụ thể từng bước nhé.</code></pre><h2 id="2-Tao-thu-muc-cho-module"><a href="#2-Tao-thu-muc-cho-module" class="headerlink" title="2. Tạo thư mục cho module"></a>2. Tạo thư mục cho module</h2><ul><li>Chúng ta có 2 nơi để tạo thư mục cho module. Đó là trong folder <code>app/code</code> và trong folder <code>vendor</code>.</li><li>Tuỳ thuộc vào cách cài đặt Magento2, những module core của magento có thể được đặt trong các thư mục <code>vendor/magento/magento-*</code> (trường hợp dùng composer để install) hoặc <code>app/code/Magento/</code> (trường hợp clone Github)</li><li>Vậy chúng ta nên đặt module mới ở đâu?<ul><li>Nếu chúng ta build một module cho một project cụ thể, chúng ta sẽ tạo mới module ở trong thư mục <code>app/code</code> và commit lên repository của product trên Github.</li><li>Nếu chúng ta xây dựng một extension để tái sử dụng, chúng ta sẽ dùng <code>composer</code> để tạo nó và chúng ta sẽ đặt module ở trong <code>vendor/&lt;YOUR_VENDOR&gt;/module-something</code></li></ul></li><li>Tên của module trong magento2 sẽ bao gồm 2 phần: tên vendor và tên của chính module đó. Nói cách khác, module sẽ được nhóm lại thành 1 vendor do vậy khi đặt tên của module ta phải chỉ định cả tên vendor đó.</li><li>Trong ví dụ này chúng ta sẽ tạo một vendor là <code>Learning</code> và một module là <code>First Unit</code><ul><li><code>cd</code> to folder root</li><li><code>mkdir app/code/Learning</code></li><li><code>mkdir app/code/Learning/FirstUnit</code></li></ul></li></ul><h2 id="3-Tao-file-etc-module-xml"><a href="#3-Tao-file-etc-module-xml" class="headerlink" title="3. Tạo file etc/module.xml"></a>3. Tạo file etc/module.xml</h2><ul><li>Trước tiên chúng ta phải đảm bảo rằng chúng ta có quyền để tạo file và folder trong folder root nhé.</li><li>Nếu đã có quyền, chúng ta tạo một file <code>etc/module.xml</code>. Phải có file này thì module mới tồn tại được.</li><li>File module.xml chứa các thông tin sau<ul><li>Module name</li><li>Module version</li><li>Dependencies</li></ul></li><li><strong>Module name</strong> đã được định nghĩa bằng tên thư mục mà chúng ta vừa tạo.</li><li>Trong Magento2, tất cả các class name phải tuân theo cấu trúc thư mục. Bởi vì chúng ta tạo thư mục là <code>Learning/FirstUnit</code> nên module name của chúng ta sẽ là <code>Learning_FirstUnit</code>.</li><li>Tất cả các class thuộc module này sẽ là bắt đầu với <code>Learning/FirstUnit</code><br>Ví dụ <code>Learning\FirstUnit\Observer\Test</code></li><li>Tiếp theo đến <strong>Module version</strong>. Module version cho biết được phiên bản hiện tại của <strong>database schema</strong> và <strong>data</strong>, được sử dụng cho việc upgrade module.</li><li>Ví dụ như giả định bạn muốn thay đổi cấu trúc bảng dữ liệu (database table schema) của module này. Làm thế nào để bạn đảm bảo rằng thay đổi này sẽ được áp dụng trên tất cả các phiên bản mã code đã được deploy rồi.</li><li>Magento sẽ có các <strong>script install</strong> và <strong>upgrade</strong> cho mỗi module (Hoặc bạn tự tạo). Các file script này sẽ có các command để thay đổi database schema và data.</li><li>Để theo dõi xem liệu đã thực thi phần lệnh trong script hay chưa, magento sẽ track dựa vào <strong>module version</strong>. Mỗi lần bạn thực thi thay đổi mới trong database, bạn sẽ phải thực thi với version mới của module và tăng version của module lên tương ứng trong file module.xml.</li><li>Magento sẽ lưu phiên bản hiện tại của module trong database. Nếu giá trị trong database và trong file module.xml không khớp với nhau, nó sẽ thực thi <strong>upgrade</strong> code.</li><li><strong>Dependencies</strong>: Nếu một module phụ thuộc vào một module khác thì chúng ta phải khai báo trong file modules.xml danh sách các module mà module hiện tại của chúng ta đang phụ thuộc vào. Ví dụ, module này chúng ta tạo ra sẽ phụ thuộc vào module Magento_Catalog.</li><li>Đầu tiên chúng ta tạo folder etc:<br><code>mkdir app/code/Learning/FirstUnit/etc</code></li><li>Tạo file module.xmll<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;urn:magento:framework:Module/etc/module.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">&quot;Learning_FirstUnit&quot;</span> <span class="attr">setup_version</span>=<span class="string">&quot;0.0.1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sequence</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">&quot;Magento_Catalog&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">sequence</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Trong file module mà chúng ta vừa tạo, chúng ta đã chỉ định:<ul><li>Module name: <code>Learning_FirstUnit</code> dựa trên folder mà chúng ta đã tạo.</li><li>Versionn: <code>0.0.1</code> (Version khởi tạo của module)</li><li>Dependency: <code>Magento_Catalog</code>. Chúng ta có thể có nhiều Dependency, khi ấy chúng ta hãy liệt kê bằng các thẻ <code>&lt;module name=&quot;...&quot; /&gt;</code> ở bên trong thẻ <code>&lt;sequence&gt;</code></li></ul></li></ul><h2 id="4-Tao-file-registration-php"><a href="#4-Tao-file-registration-php" class="headerlink" title="4. Tạo file registration.php"></a>4. Tạo file registration.php</h2><ul><li>Mỗi module sẽ phải có file này để đăng kí cho magento biết vị trí của module. Tiếp tục example, chúng ta sẽ tạo file <code>app/code/Learning/FirstUnit/registration.php</code><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> \Magento\Framework\Component\ComponentRegistrar::register(</span><br><span class="line">\Magento\Framework\Component\ComponentRegistrar::MODULE, <span class="string">&#x27;Learning_FirstUnit&#x27;</span>,</span><br><span class="line"><span class="keyword">__DIR__</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>File <strong>registrationn.phpp</strong> sẽ giống nhau đối với tất cả các module, chỉ khác tên của module, ở đây của chúng ta là <code>Learning_FirstUnit</code></li></ul><h2 id="5-Chay-command"><a href="#5-Chay-command" class="headerlink" title="5. Chạy command"></a>5. Chạy command</h2><ul><li>Tạo xong module chúng ta phải chạy command để active module, để thông báo cho magento biết về sự hiện diện của nó.<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ php bin/magento setup:upgrade</span><br></pre></td></tr></table></figure></li><li>Câu lệnh sẽ cho ra rất nhiều dòng input, hãy check xem một trong các dòng đó có <code>Learning_FirstUnit</code> hay không.</li></ul><h2 id="6-Check-module-is-active"><a href="#6-Check-module-is-active" class="headerlink" title="6 Check module is active"></a>6 Check module is active</h2><ul><li>Mặc dù chúng ta chưa add những logic code vào module, trong ví dụ này chúng ta chỉ thực hiện tạo module, module hiện taị đang trống và không thể nhìn thấy được.</li><li>Để kiểm tra module đã được nhận hay chưa, chúng ta hãy kiểm tra file <code>app/etc/config.php</code>, file này chứa tất cả các module đã được active. Chúng cũng không được thay đổi file này một cách thủ công.</li><li>Check module is active</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep Learning_FirstUnit app/etc/config.php</span><br></pre></td></tr></table></figure><h2 id="7-Ket-luan"><a href="#7-Ket-luan" class="headerlink" title="7. Kết luận."></a>7. Kết luận.</h2><ul><li>Lại là một bài viết đơn giản siêu siêu beginer cho các bạn mới mày mò tìm hiểu magento, thực hiện các bước trong bài viết, các bạn đã có thể tạo cho mình một module để bắt đầu có thể add những logic phực tạp hơn cho module trong magento. Mong bài viết sẽ có ích đối với các bạn và hãy đón chờ các bài viết tiếp theo của mình trong serries về Magento nhé. Ciao!</li><li>Bài viết tham khảo <a href="https://devdocs.magento.com/videos/fundamentals/create-a-new-module/">https://devdocs.magento.com/videos/fundamentals/create-a-new-module/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/07/18/create-a-new-module-in-magento2/module.webp&quot; alt=&quot;magento&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-Tong-quat&quot;&gt;&lt;a href=&quot;#1-Tong-quat&quot; class=&quot;</summary>
      
    
    
    
    <category term="Magento" scheme="https://huongvnq.github.io/categories/Magento/"/>
    
    
    <category term="magento basic" scheme="https://huongvnq.github.io/tags/magento-basic/"/>
    
  </entry>
  
  <entry>
    <title>Create A New Page In Magento2</title>
    <link href="https://huongvnq.github.io/2021/07/17/create-a-new-page-in-magento2/"/>
    <id>https://huongvnq.github.io/2021/07/17/create-a-new-page-in-magento2/</id>
    <published>2021-07-17T07:06:27.037Z</published>
    <updated>2021-07-20T02:49:27.674Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2021/07/17/create-a-new-page-in-magento2/magento.png" alt="magento"></p><h2 id="1-Tong-quan"><a href="#1-Tong-quan" class="headerlink" title="1. Tổng quan"></a>1. Tổng quan</h2><ul><li>Mở đầu series chia sẻ về Magento lần này, mình sẽ trình bày cách tạo một page mới trong magnento. Chúng ta sẽ cùng tạo một page mới trả về JSON với một tham số “HELLO WORLD!” nhé. :D</li><li>Để thêm một page mới trong magento2, chúng ta phải tạo một <strong>controller</strong>.</li><li>Trong Magento2, một controller là một file được đặt ở một nơi được quy định để magento có thể hiểu và response một <strong>route</strong> tương ứng.</li><li>Một route trong Magento2 là một URL tiêu chuẩn bao gồm 3 phần:<ul><li><strong>frontName</strong></li><li><strong>controllerName</strong></li><li><strong>actionName</strong></li></ul></li></ul><pre><code>Chúng ta sẽ đi vào tìm hiểu magento sẽ dựa vào 3 phần này của route như thế nào để tương ứng với một file nhất định.</code></pre><ul><li><p>Các bước để tạo một new page:</p><ul><li>Tạo một module mới.</li><li>Tạo file routes.xml</li><li>Tạo file controller (action)</li></ul><p>Chúng ta hãy cùng đi vào cụ thể từng bước nhé. :D</p></li></ul><h2 id="2-Tao-mot-module-moi"><a href="#2-Tao-mot-module-moi" class="headerlink" title="2. Tạo một module mới"></a>2. Tạo một module mới</h2><ul><li>Để tạo một module, bạn cần làm theo các bước sau:<ul><li>Tạo một folder cho module.</li><li>Tạo file etc/module.xml</li><li>Tạo file registration.php</li><li>Chạy lệnh <code>bin/magento setup:upgrade</code></li></ul></li><li>Thực hành luôn, chúng ta sẽ tạo một thư mực module tên là Learning_HelloPage<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> &lt;magento2_root&gt;/app/code</span><br><span class="line">$ mkdir Learning</span><br><span class="line">$ mkdir Learning/HelloPage</span><br></pre></td></tr></table></figure></li><li>Tạo file registration.php<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment">* Copyright © 2016 Magento. All rights reserved. * See COPYING.txt for license details.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">\Magento\Framework\Component\ComponentRegistrar::register( \Magento\Framework\Component\ComponentRegistrar::MODULE, <span class="string">&#x27;Learning_HelloPage&#x27;</span>,</span><br><span class="line"><span class="keyword">__DIR__</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></li><li>Tạo file module.xml<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Copyright © 2016 Magento. All rights reserved. * See COPYING.txt for license details.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;urn:magento:framework:Module/etc/module.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">&quot;Learning_HelloPage&quot;</span> <span class="attr">setup_version</span>=<span class="string">&quot;0.0.1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">module</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure>Như vậy là chúng ta đã tạo xong một module mới. Về Quy tắc đặt tên, cấu trúc thư mục, ý nghĩa của các file registration.php, module.xml mình sẽ trình bày cụ thể trong bài viết tiếp theo.</li></ul><h2 id="3-Tao-file-routes-xml"><a href="#3-Tao-file-routes-xml" class="headerlink" title="3. Tạo file routes.xml"></a>3. Tạo file routes.xml</h2><ul><li>Trước khi đi vào tạo file routes.xml, chúng ta hãy cùng tìm hiểu xem một route hoạt động thế nào trong magento2 nhé.</li><li>Magento có các <strong>area</strong>, chẳng hạn như <strong>admin</strong> - liên quan đến việc hiện thị bên trang admin, <strong>frontend</strong> liên quan đến việc hiện thị giao diện phía người dùng.</li><li>Mỗi một area sẽ có một file routes.xml được merge từ các file <code>etc/area/routes.xml</code> từ tất cả các module.</li><li>File route.xml sẽ chứa tất cả các thông tin về route đựợc đăng kí và <strong>frontName</strong>. Lưu ý rằng <strong>frontName</strong> sẽ là phần đầu của một route.</li><li>Để dễ hiểu hơn chúng ta hãy đi vào thực hành nhé. Bởi vì chúng ta đang tạo một page return về JSON cho user, tức là đang trong frontend area. Do đó chúng ta sẽ tạo một file <code>ect/frontend/routes.xml</code> cho module <code>Learning_HelloPage</code><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Copyright © 2016 Magento. All rights reserved. * See COPYING.txt for license details.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span> <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;urn:magento:framework:App/etc/routes.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router</span> <span class="attr">id</span>=<span class="string">&quot;standard&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">route</span> <span class="attr">id</span>=<span class="string">&quot;learning&quot;</span> <span class="attr">frontName</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">module</span> <span class="attr">name</span>=<span class="string">&quot;Learning_HelloPage&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">route</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">router</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>Chúng ta vừa thêm một route tên là <code>learning</code>.Lưu ý là tên của route không nhất thiết phải trùng với tên của module.</li><li>frontName mà chúng ta tạo lfa <code>test</code>. Thông thường tên route và frontName là giống nhau nhưng cũng không bắt buộc phải vậy.</li><li>Khi magento xử lý một route <code>test/chunk2/chunk3</code>, magento sẽ kiểm tra liệu trong thư mục module <code>Learning_HelloPage</code> có thư mục <code>Controller/Chunk2</code> hay không. Tiếp đến trong thư mục Chunk2 có action file <code>Chunk3</code> hay không.</li><li>Ở đây route của chúng ta sẽ là <code>test/page/view</code>. Chúng ta hãy cùng tạo file Controller để magento có thể hiểu và lấy làm file xử lý route này nhé.</li></ul><h2 id="4-Tao-file-controller-file-action"><a href="#4-Tao-file-controller-file-action" class="headerlink" title="4. Tạo file controller (file action)"></a>4. Tạo file controller (file action)</h2><ul><li><p>Như đã nó ở bên trên, với route <code>test/page/view</code>, Magento sẽ tìm đến thư mục Controller/Page, tiếp đó tìm đến file View.php</p></li><li><p>Chúng ta thêm controller như sau:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;magento2_root&gt;/app/code/Learning/HelloPage</span><br><span class="line">$ mkdir Controller</span><br><span class="line">$ mkdir Controller/Page</span><br></pre></td></tr></table></figure><p>Tạo action file <code>Controller/Page/View.php</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copyright © 2016 Magento. All rights reserved.</span></span><br><span class="line"><span class="comment"> * See COPYING.txt for license details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Learning</span>\<span class="title">HelloPage</span>\<span class="title">Controller</span>\<span class="title">Page</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">View</span> <span class="keyword">extends</span> \<span class="title">Magento</span>\<span class="title">Framework</span>\<span class="title">App</span>\<span class="title">Action</span>\<span class="title">Action</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> \Magento\Framework\Controller\Result\JsonFactory</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$resultJsonFactory</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> \Magento\Framework\App\Action\Context $context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> \Magento\Framework\Controller\Result\JsonFactory $resultJsonFactory</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">       \Magento\Framework\App\Action\Context <span class="variable">$context</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">       \Magento\Framework\Controller\Result\JsonFactory <span class="variable">$resultJsonFactory</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="keyword">$this</span>-&gt;resultJsonFactory = <span class="variable">$resultJsonFactory</span>;</span><br><span class="line">       <span class="built_in">parent</span>::__construct(<span class="variable">$context</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * View  page action</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> \Magento\Framework\Controller\ResultInterface</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">       <span class="variable">$result</span> = <span class="keyword">$this</span>-&gt;resultJsonFactory-&gt;create();</span><br><span class="line">       <span class="variable">$data</span> = [<span class="string">&#x27;message&#x27;</span> =&gt; <span class="string">&#x27;Hello world!&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;setData(<span class="variable">$data</span>);</span><br><span class="line">&#125; &#125;</span><br></pre></td></tr></table></figure></li><li><p>Việc còn lại là active module và page của chúng ta bằng cách chạy câu lệnh <strong>Magento setup uprade</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &lt;magento2_root&gt;</span><br><span class="line">$ php bin/magento setup:upgrade</span><br></pre></td></tr></table></figure></li><li><p>Đến đây chúng ta có thể test page của chúng ta bằng cách gõ đường link <code>/test/page/view</code>. Chúng ta sẽ nhìn thấy message hiện lên trên trang</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">&quot;message&quot;</span>: <span class="string">&quot;Hello world!&quot;</span> &#125;</span><br></pre></td></tr></table></figure></li><li><p>Ở bài viết này chủ yếu đi vào cách tạo một page mới nên chúng ta xây dựng một trang trả về một <strong>ResultJson</strong>. Ngoài ra magento2 có rất nhiều kiểu Result Object cho các trừờng hợp khác như ResultPage, Forward Result…</p></li></ul><h2 id="5-Tong-ket"><a href="#5-Tong-ket" class="headerlink" title="5. Tổng kết."></a>5. Tổng kết.</h2><ul><li>Bài viết là một bài cơ bản, đơn giản về cách tạo một page trong Magento2. Mong bài viết sẽ hữu ích cho các bạn beginner bắt đầu mày mò nghiên cứu về magento. Mình cũng mới dấn thân vào con đường Magento nên mong các bạn góp ý cho bài viết và hãy cùng mình học tập tìm hiểu về magento trong những bài viết tiếp theo nhé. see ya!</li><li>Bài viết tham khảo <a href="https://devdocs.magento.com/videos/fundamentals/create-a-new-page/">https://devdocs.magento.com/videos/fundamentals/create-a-new-page/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2021/07/17/create-a-new-page-in-magento2/magento.png&quot; alt=&quot;magento&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-Tong-quan&quot;&gt;&lt;a href=&quot;#1-Tong-quan&quot; class=&quot;he</summary>
      
    
    
    
    <category term="Magento" scheme="https://huongvnq.github.io/categories/Magento/"/>
    
    
    <category term="magento basic" scheme="https://huongvnq.github.io/tags/magento-basic/"/>
    
  </entry>
  
</feed>
